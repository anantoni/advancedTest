public class Main extends java.lang.Object
{

    public void <init>()
    {
        Main this;

        this := @this: Main;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        extras.Test $r0, test1, test3;
        extras.Test2 $r1, $r2, $r3;

        args := @parameter0: java.lang.String[];
        $r0 = new extras.Test;
        specialinvoke $r0.<extras.Test: void <init>()>();
        test1 = $r0;
        $r2 = new extras.Test2;
        specialinvoke $r2.<extras.Test2: void <init>()>();
        test1.<extras.Test: extras.Test2 test2> = $r2;
        $r0 = new extras.Test;
        $r1 = new extras.Test2;
        specialinvoke $r1.<extras.Test2: void <init>()>();
        $r3 = new extras.Test2;
        specialinvoke $r3.<extras.Test2: void <init>()>();
        specialinvoke $r0.<extras.Test: void <init>(extras.Test,extras.Test2,extras.Test2)>(test1, $r1, $r3);
        test3 = $r0;
        test1 = staticinvoke <Main: extras.Test foo()>();
        $r2 = new extras.Test2;
        specialinvoke $r2.<extras.Test2: void <init>()>();
        virtualinvoke test1.<extras.Test: void speak(extras.Test2)>($r2);
        return;
    }

    static extras.Test foo()
    {
        extras.Test $r0;

        $r0 = new extras.Test;
        specialinvoke $r0.<extras.Test: void <init>()>();
        return $r0;
    }
}
