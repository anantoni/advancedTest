public class Main extends java.lang.Object
{

    public void <init>()
    {
        Main l0;

        l0 := @this: Main;
        specialinvoke l0.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] l0;
        extras.Test $stack0, l1, l2, $stack0#3, l1#2;
        extras.Test2 $stack3, $stack1#2, $stack4#2, $stack1#4;

        l0 := @parameter0: java.lang.String[];
        $stack0 = new extras.Test;
        specialinvoke $stack0.<extras.Test: void <init>()>();
        l1 = $stack0;
        $stack1#2 = new extras.Test2;
        specialinvoke $stack1#2.<extras.Test2: void <init>()>();
        l1.<extras.Test: extras.Test2 test2> = $stack1#2;
        $stack0#3 = new extras.Test;
        $stack3 = new extras.Test2;
        specialinvoke $stack3.<extras.Test2: void <init>()>();
        $stack4#2 = new extras.Test2;
        specialinvoke $stack4#2.<extras.Test2: void <init>()>();
        specialinvoke $stack0#3.<extras.Test: void <init>(extras.Test,extras.Test2,extras.Test2)>(l1, $stack3, $stack4#2);
        l2 = $stack0#3;
        l1#2 = staticinvoke <Main: extras.Test foo()>();
        $stack1#4 = new extras.Test2;
        specialinvoke $stack1#4.<extras.Test2: void <init>()>();
        virtualinvoke l1#2.<extras.Test: void speak(extras.Test2)>($stack1#4);
        return;
    }

    static extras.Test foo()
    {
        extras.Test $stack0;

        $stack0 = new extras.Test;
        specialinvoke $stack0.<extras.Test: void <init>()>();
        return $stack0;
    }
}
